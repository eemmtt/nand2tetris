// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            {0, 0, in, 0, 0, 0, 0, 0} if sel == 010
 *                            {0, 0, 0, in, 0, 0, 0, 0} if sel == 011
 *                            {0, 0, 0, 0, in, 0, 0, 0} if sel == 100
 
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    // Put your code here:
    Not(in=sel[2], out=ns2);
    Not(in=sel[1], out=ns1);
    Not(in=sel[0], out=ns0);
    And(a=in, b=ns2, out=and1);
    And(a=in, b=sel[2], out=and2);
    And(a=and1, b=ns1, out=and3);
    And(a=and1, b=sel[1], out=and4);
    And(a=and2, b=ns1, out=and5);
    And(a=and2, b=sel[1], out=and6);
    And(a=and3, b=ns0, out=a);
    And(a=and3, b=sel[0], out=b);
    And(a=and4, b=ns0, out=c);
    And(a=and4, b=sel[0], out=d);
    And(a=and5, b=ns0, out=e);
    And(a=and5, b=sel[0], out=f);
    And(a=and6, b=ns0, out=g);
    And(a=and6, b=sel[0], out=h);
    //31

    //DMux(in=in, sel=sel[2], a=out1, b=out2);
    //DMux4Way(in=out1, sel=sel[0..1], a=a, b=b, c=c, d=d);
    //DMux4Way(in=out2, sel=sel[0..1], a=e, b=f, c=g, d=h);
    //33-35

    //DMux(in=in, sel=sel[2], a=out0, b=out1);
    //DMux(in=out0, sel=sel[1], a=out00, b=out01);
    //DMux(in=out1, sel=sel[1], a=out10, b=out11);
    //DMux(in=out00, sel=sel[0], a=a, b=b);
    //DMux(in=out01, sel=sel[0], a=c, b=d);
    //DMux(in=out10, sel=sel[0], a=e, b=f);
    //DMux(in=out11, sel=sel[0], a=g, b=h);
    //35
}

/*
a = in * ns2    * ns1      * ns0
b = in * ns2    * ns1      * sel[0]
c = in * ns2    * sel[1]   * ns0
d = in * ns2    * sel[1]   * sel[0]
e = in * sel[2] * ns1      * ns0
f = in * sel[2] * ns1      * sel[0]
g = in * sel[2] * sel[1]   * ns0
h = in * sel[2] * sel[1]   * sel[0]

*/